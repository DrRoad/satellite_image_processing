#import libraries
library(usdm)
library(raster)
library(rgdal)
img_bands <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/L_sabie_subset_img.tif')
indices <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/RadiometricIndices.tif')
ndsi <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/ndsi.tif')
si1 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/SI1.tif')
si2 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/SI2.tif')
si3 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/SI3.tif')
si4 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/SI4.tif')
si5 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/SI5.tif')
si6 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/SI6.tif')
si7 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/SI7.tif')
si8 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/SI8.tif')
si9 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_indices/SI9.tif')
texture1 <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/texture_variables/HaralickTextureExtraction_8977797e-d7ff-4fa3-bc14-ebeed46079f0.tif')
texture2 <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/texture_variables/HaralickTextureExtraction_2.tif')
wet_evi <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_temporal_variables/subset_wet_season_evi.tif')
dry_evi <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/spectral_temporal_variables/subset_dry_season_evi.tif')
elevation <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/topo_variables/subset_dem.tif')
aspect <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/topo_variables/subset_aspect.tif')
slope <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/topo_variables/subset_slope.tif')
tpi <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/topo_variables/subset_tpi.tif')
water_proximity <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/osm_biophysical_variables/proximity_to_water_map.tif')
si4 <- resample(si4, ndsi, method='bilinear')
wet_evi <- resample(wet_evi, ndsi, method='bilinear')
dry_evi <- resample(dry_evi, ndsi, method='bilinear')
elevation <- resample(elevation, ndsi, method='bilinear')
aspect <- resample(aspect, ndsi, method='bilinear')
slope <- resample(slope, ndsi, method='bilinear')
tpi <- resample(tpi, ndsi, method='bilinear')
x <- stack(img_bands,indices,ndsi,si1,si2,si3,si4,si5,si6,si7,si8,si9,texture1,texture2,wet_evi,dry_evi,elevation,aspect,slope,tpi,water_proximity)
#run Variance Inflation Factor (stepwise elimination)
v <- vif(x)
#retrieve results
v
write.csv(v, file = 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/vif_values.csv')
library(ggplot2)
file_path <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/predictor_vif.csv'
vif_df <- read.csv(file_path)
head(vif_df)
file_path <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/predictor_vif.csv'
vif_df <- read.csv(file_path)
head(vif_df)
file_path <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/predictor_vif.csv'
vif_df <- read.csv(file_path)
head(vif_df)
file_path <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/predictor_vif.csv'
vif_df <- read.csv(file_path)
head(vif_df)
p<- ggplot(vif_df, aes(VIF,Predictor))+geom_bar()
p
p<- ggplot(vif_df, aes(VIF,Predictor))+geom_bar(stat = 'identity')
p
p<- ggplot(vif_df, aes(Predictor, VIF))+geom_bar(stat = 'identity')
p
p<- ggplot(vif_df, aes(Predictor, VIF))+geom_bar(stat = 'identity', aes(fill = Dataset))
p
p<- ggplot(vif_df, aes(Predictor, VIF))+ scale_x_discrete()
p
p<- ggplot(vif_df, aes(Predictor, VIF))+ scale_x_discrete(limits = VIF)
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)')
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank())
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line())
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank())
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank())
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank(),
axix.text.y = element_text(angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank(),
axix.text.x = element_text(angle = 45))
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 12, angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 8, angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(linetype = 6), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(linetype = 1), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(linetype = 1, lineend = 'square'), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(linetype = 1, lineend = 'butt'), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(linetype = 1, lineend = 'round'), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 45))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(linetype = 1, lineend = 'round'), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 47))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_blank(), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 47))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line.y = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 47))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line.y = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 47))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line.y = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 47))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line.y = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 120))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line.y = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 6, angle = 120))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line.y = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
library(ggplot2)
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_blank(), axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
p
library(tidyr)
#accuracy plot
file_path2 <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/mlp_independent_accuracy.csv'
acc_df <- read.csv(file_path2)
library(reshape)
acc_df <- read.csv(file_path2)
acc_df.m <- melt(acc_df, id.vars = 'Accuracy metric')
head(acc_df)
acc_df.m <- melt(acc_df, id.vars = 'Accuracy_metric')
#accuracy plot
file_path2 <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/mlp_independent_accuracy.csv'
acc_df <- read.csv(file_path2)
head(acc_df)
acc_df.m <- melt(acc_df, id.vars = 'Accuracy_metric')
head(acc_df.m)
#accuracy plot
file_path2 <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/mlp_independent_accuracy.csv'
acc_df <- read.csv(file_path2)
head(acc_df)
#accuracy plot
file_path2 <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/mlp_independent_accuracy.csv'
acc_df <- read.csv(file_path2)
head(acc_df)
acc_df.m <- melt(acc_df, id.vars = 'Accuracy_metric')
head(acc_df.m)
#accuracy plot
file_path2 <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/mlp_independent_accuracy.csv'
acc_df <- read.csv(file_path2)
head(acc_df)
acc_df.m <- melt(acc_df, id.vars = 'Accuracy_metric')
head(acc_df.m)
ggplot(acc_df.m, aes(variable, value)) +
geom_bar(aes(fill = Accuracy_metric), position = "dodge")
ggplot(acc_df.m, aes(variable, value)) +
geom_bar(stat = 'identity',aes(fill = Accuracy_metric), position = "dodge")
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(panel.border = element_line(), axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
p
p<- ggplot(vif_df, aes(x = VIF, y =reorder(Predictor, -VIF) ))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
p
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
p
p + coord_flip()
p<- ggplot(vif_df, aes(x = reorder(Predictor, VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
p + coord_flip()
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
p
# permutation mportance plots
file_path3<- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/mlp_permImportance.csv'
file_path4<- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/rf_permImportance.csv'
mlp_df = rea.csv(file_path3)
rf_df = rea.csv(file_path4)
mlp_df = read.csv(file_path3)
rf_df = read.csv(file_path4)
mlp_plot <- ggplot(mlp_df, aes(x = reorder(Predictor, -weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
rf_plot <- ggplot(rf_df, aes(x = reorder(Predictor, -weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
mlp_plot <- ggplot(mlp_df, aes(x = reorder(Predictor, -weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
rf_plot <- ggplot(rf_df, aes(x = reorder(Predictor, -weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
mlp_plot
rf_plot
mlp_plot + coord_flip()
mlp_plot <- ggplot(mlp_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
rf_plot <- ggplot(rf_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
mlp_plot + coord_flip()
rf_plot + coord_flip()
mlp_plot <- ggplot(mlp_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 120))
rf_plot <- ggplot(rf_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 5, angle = 120))
mlp_plot + coord_flip()
rf_plot + coord_flip()
rf_plot <- ggplot(rf_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 2, angle = 120))
rf_plot + coord_flip()
mlp_plot <- ggplot(mlp_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
rf_plot <- ggplot(rf_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
mlp_plot + coord_flip()
mlp_plot <- ggplot(mlp_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120),
axis.text.y = element_text(size = 7))
rf_plot <- ggplot(rf_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120),
axis.text.y = element_text(size = 7))
mlp_plot + coord_flip()
rf_plot + coord_flip()
mlp_plot <- ggplot(mlp_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
geom_errorbar(aes(ymin = weight - std, ymax = weight + std), width=0.6)+
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120),
axis.text.y = element_text(size = 7))
rf_plot <- ggplot(rf_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
geom_errorbar(aes(ymin = weight - std, ymax = weight + std), width=0.6) +
labs(x = 'Image features', y = 'Variable Importance') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120),
axis.text.y = element_text(size = 7))
mlp_plot + coord_flip()
rf_plot + coord_flip()
library(ggpubr)
mlp_plt <- mlp_plot + coord_flip()
rf_plot <- rf_plot + coord_flip()
mlp_plot <- mlp_plot + coord_flip()
rf_plot <- rf_plot + coord_flip()
figure<-ggarrange(mlp_plot,rf_plot, ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
figure
figure<-ggarrange(mlp_plot,rf_plot, ncol=2, nrow=1, labels = 'auto', common.legend = TRUE, legend="bottom")
figure
p<- ggplot(vif_df, aes(x = reorder(Predictor, -VIF), y = VIF))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
labs(x = 'Image features', y = 'Variance Inflation Factor (VIF)') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120))
p
# permutation mportance plots
file_path3<- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/mlp_permImportance.csv'
file_path4<- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/rf_permImportance.csv'
mlp_df = read.csv(file_path3)
rf_df = read.csv(file_path4)
mlp_plot <- ggplot(mlp_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
geom_errorbar(aes(ymin = weight - std, ymax = weight + std), width=0.6)+
labs(x = 'Image features', y = 'Variable weight') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120),
axis.text.y = element_text(size = 7))
rf_plot <- ggplot(rf_df, aes(x = reorder(Predictor, weight), y = weight))+ geom_bar(stat = 'identity', aes(fill = Dataset))+
geom_errorbar(aes(ymin = weight - std, ymax = weight + std), width=0.6) +
labs(x = 'Image features', y = 'Variable weight') + theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank(),
axis.text.x = element_text(size = 7, angle = 120),
axis.text.y = element_text(size = 7))
mlp_plot <- mlp_plot + coord_flip()
rf_plot <- rf_plot + coord_flip()
figure<-ggarrange(mlp_plot,rf_plot, ncol=2, nrow=1, labels = 'auto', common.legend = TRUE, legend="bottom")
figure
library(usdm)
library(raster)
library(rgdal)
#...this is temporal
img <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/010039360030_01_P001_MUL/19JUL01081719-M2AS-010039360030_01_P001.tif')
text_1 <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/010039360030_01_P001_MUL/HaralickTextureExtraction1.tif')
text_2 <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/010039360030_01_P001_MUL/HaralickTextureExtraction2.tif')
index <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/010039360030_01_P001_MUL/indices.tif')
si5 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/010039360030_01_P001_MUL/SI5.tif')
si9 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/010039360030_01_P001_MUL/SI9.tif')
# merger files
sabi_img <- stack(img,index, si5, si9, text_1[[1]],text_1[[3]],text_1[[4]],text_1[[5]],text_1[[6]],text_1[[7]],text_1[[8]],
text_2[[1]],text_2[[2]],text_2[[4]],text_2[[7]],text_2[[9]])
# save image
writeRaster(sabi_img, filename="D:/studies/phd/WV3_Data_JULY2019/010039360030_01/010039360030_01_P001_MUL/sabi_data.tif", options="INTERLEAVE=BAND", overwrite=TRUE)
#...this is temporal
img <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360030_01/010039360040_01_P001_MUL/19JUL07081130-M2AS-010039360040_01_P001.tif')
#...this is temporal
img <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360040_01/010039360040_01_P001_MUL/19JUL07081130-M2AS-010039360040_01_P001.tif')
text_1 <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360040_01/010039360040_01_P001_MUL/HaralickTextureExtraction_1.tif')
text_2 <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360040_01/010039360040_01_P001_MUL/HaralickTextureExtraction_2.tif')
index <- stack('D:/studies/phd/WV3_Data_JULY2019/010039360040_01/010039360040_01_P001_MUL/indices.tif')
si5 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360040_01/010039360040_01_P001_MUL/SI5.tif')
si9 <- raster('D:/studies/phd/WV3_Data_JULY2019/010039360040_01/010039360040_01_P001_MUL/SI9.tif')
# merger files
satara_img <- stack(img,index, si5, si9, text_1[[1]],text_1[[3]],text_1[[4]],text_1[[5]],text_1[[6]],text_1[[7]],text_1[[8]],
text_2[[1]],text_2[[2]],text_2[[4]],text_2[[7]],text_2[[9]])
# save image
writeRaster(satara_img, filename="D:/studies/phd/WV3_Data_JULY2019/010039360040_01/010039360040_01_P001_MUL/satara_data.tif", options="INTERLEAVE=BAND", overwrite=TRUE)
library(ggplot2)
library(tidyr)
library(reshape)
library(ggpubr)
#... accuracy comparison plots from nested cv
cv_file <- 'D:/studies/phd/WV3_Data_JULY2019/010039360030_01/L_Sabie_subset/nested-cv_accuracy results.csv'
cv_score <- read.csv(cv_file)
head(cv_score)
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(aes(fill= Metric), position = position_dodge(0.9))+
scale_fill_manual(values= c("#999999", "#E69F00"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(aes(fill= Metric), position = position_dodge(0.9))+
scale_fill_manual(values= c("#00AFBB", "#E7B800"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(aes(fill= Metric))+
scale_fill_manual(values= c("#00AFBB", "#E7B800"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(aes(fill= Metric), position = position_dodge(0.9))+
scale_fill_manual(values= c("#00AFBB", "#E7B800"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(aes(fill= Metric), position = position_dodge(0.9))+
scale_fill_manual(values= c("gold", "darkgreen"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = TRUE ,aes(fill= Metric,), position = position_dodge(0.9))+
scale_fill_manual(values= c("gold", "darkgreen"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.9))+
scale_fill_manual(values= c("gold", "darkgreen"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.5))+
scale_fill_manual(values= c("gold", "darkgreen"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.7))+
scale_fill_manual(values= c("gold", "darkgreen"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)')
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)') + geom_line()
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)') + geom_line(group=Metric)
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)') + geom_line(group=2)
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)') + geom_line(group=1)
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+
stat_boxplot(geom="errorbar", width=.5)+
geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)')
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+
geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)')+
stat_boxplot(geom="errorbar", width=.5)
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+
geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)')
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+
geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)')+
stat_summary(fun.y=median, geom="smooth", aes(group=1), lwd=1)
p
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+
geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)')+
stat_summary(fun.y=mean, geom="smooth", aes(group=1), lwd=1)
p
theme(axis.line = element_line(), panel.background = element_blank()
)
p <- ggplot(cv_score, aes(x= Algorithm, y= Score))+
geom_boxplot(notch = FALSE ,aes(fill= Metric,), position = position_dodge(0.8))+
scale_fill_manual(values= c("gold", "darkgreen"))+ labs(y='Accuracy (%)')+
stat_summary(fun.y=mean, geom="smooth", aes(group=1), lwd=1)+ theme_bw()+
theme(axis.line = element_line(), panel.background = element_blank())
p
